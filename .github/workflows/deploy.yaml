name: Deploy to AWS ECR
on:

  push:
    branches: [ demo ]

env:
  IMAGE_TAG: rc2
  K8S_CLUSTER_NAME: sa-eks
  K8S_NAMESPACE: alanc-vampi

jobs:
  scan:
    name: Active Testing Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run VAmPI
        run: docker compose up -d

      - name: Test VAmPI
        run: sleep 5 && curl http://host.docker.internal:5002/ --retry 10 --retry-delay 1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACTIVE_REGISTRY_URL }}
          username: ${{ secrets.ACTIVE_REGISTRY_USER }}
          password: ${{ secrets.ACTIVE_REGISTRY_PASSWORD }}

      - name: Active Testing Scan
        run: >
          docker run
          --add-host=host.docker.internal:host-gateway
          -e ACTIVE_CONFIG_FILE_PATH=/noname/active_testing/active-config.json
          -e ACTIVE_BACKEND_URI=${{ secrets.ACTIVE_BACKEND_URI }}
          -v $(pwd)/active_testing:/noname/active_testing
          -v $(pwd)/openapi_specs:/noname/openapi_specs
          ${{ secrets.ACTIVE_REGISTRY_URL }}/active-cli:$(curl -k ${{ secrets.ACTIVE_API_URL }}/backend/version) scan
          --api-url=${{ secrets.ACTIVE_API_URL }}
          --api-token=${{ secrets.ACTIVE_API_TOKEN }}
          --test-group-id=${{ secrets.TEST_GROUP_ID }}
          --branch-name=${{ github.head_ref || github.ref_name }}
          --severity-threshold=medium

  build:
    needs: scan
    name: Deployment
    runs-on: ubuntu-latest

    steps:
    - name: echo
      run: echo Security scan passed, deploying to production

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      id: install_kubectl

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}

      run: |
        # Build a docker container and push it to ECR 
        echo "Building the Docker image..."
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.K8S_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f deploy/k8s/ -n ${{ env.K8S_NAMESPACE }}